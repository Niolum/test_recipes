"""New Migration

Revision ID: 64ad69455dcc
Revises: 
Create Date: 2022-09-17 20:58:00.133811

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64ad69455dcc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True, comment='Дата создания'),
    sa.Column('updated_on', sa.DateTime(), nullable=True, comment='Дата измерерия'),
    sa.Column('name', sa.String(length=120), nullable=True, comment='Название блюда'),
    sa.Column('type_of_recipe', sa.Enum('salat', 'pervoe', 'vtoroe', 'desert', 'napitok', 'vipechka', name='typerecipeenum'), nullable=False),
    sa.Column('description', sa.String(), nullable=True, comment='Описание'),
    sa.Column('coocking_steps', sa.String(), nullable=True, comment='Шаги приготовления'),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('like', sa.Integer(), nullable=True, comment='Лайки'),
    sa.Column('set_hashtag', sa.String(), nullable=True, comment='Набор хэштегов'),
    sa.Column('is_blocked', sa.Boolean(), nullable=True, comment='Статус: заблокирован или активен'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipes_id'), 'recipes', ['id'], unique=True)
    op.create_index(op.f('ix_recipes_is_blocked'), 'recipes', ['is_blocked'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False, comment='Имя пользователя'),
    sa.Column('hashed_password', sa.String(), nullable=True, comment='Пароль'),
    sa.Column('is_blocked', sa.Boolean(), nullable=True, comment='Статус: заблокирован или активен'),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True, comment='Дата создания'),
    sa.Column('updated_on', sa.DateTime(), nullable=True, comment='Дата измерерия'),
    sa.Column('disabled', sa.Boolean(), nullable=True, comment='Статус: онлайн или нет'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_is_blocked'), 'users', ['is_blocked'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('user_recipes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'recipe_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_recipes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_is_blocked'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_recipes_is_blocked'), table_name='recipes')
    op.drop_index(op.f('ix_recipes_id'), table_name='recipes')
    op.drop_table('recipes')
    # ### end Alembic commands ###
